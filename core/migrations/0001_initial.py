# Generated by Django 5.2 on 2025-07-05 15:53

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountDeletionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_account_username', models.CharField(help_text='Username of the account that was deleted.', max_length=150)),
                ('deletion_timestamp', models.DateTimeField(auto_now_add=True, help_text='The date and time when the account was deleted.')),
                ('reason', models.TextField(blank=True, help_text='Optional reason provided for the account deletion.', null=True)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='The user who performed the account deletion (will be null for self-deletion).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_deletion_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Account Deletion Log',
                'verbose_name_plural': 'Account Deletion Logs',
                'ordering': ['-deletion_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('caption', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='post_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('no_of_likes', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.post')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('profileimg', models.ImageField(default='blank_profile_picture.png', upload_to='profile_images/')),
                ('location', models.CharField(blank=True, max_length=100)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('relation', models.CharField(blank=True, choices=[('single', 'Single'), ('in_a_relationship', 'In a Relationship'), ('married', 'Married'), ('complicated', "It's Complicated")], max_length=20)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('gay', 'Gay'), ('lesbian', 'Lesbian'), ('neutral', 'Neutral')], max_length=10)),
                ('height', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('deactivation_expiry', models.DateTimeField(blank=True, null=True)),
                ('active_status_date', models.DateTimeField(blank=True, null=True)),
                ('is_online', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.JSONField(blank=True, default=list)),
                ('looking_for', models.JSONField(blank=True, default=list)),
                ('age_range', models.JSONField(blank=True, default=list)),
                ('goal', models.JSONField(blank=True, default=list)),
                ('meet', models.JSONField(blank=True, default=list)),
                ('smoke', models.JSONField(blank=True, default=list)),
                ('drink', models.JSONField(blank=True, default=list)),
                ('children', models.JSONField(blank=True, default=list)),
                ('hobbies', models.JSONField(blank=True, default=list)),
                ('traits', models.JSONField(blank=True, default=list)),
                ('love_language', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='survey', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accepted', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('from_user', 'to_user')},
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='core.post')),
            ],
            options={
                'unique_together': {('post', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.post')),
            ],
            options={
                'unique_together': {('user', 'post')},
            },
        ),
    ]
